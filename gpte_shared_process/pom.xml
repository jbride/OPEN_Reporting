<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <!-- Instructions:
       mvn clean test                                                                                               :   execute tests
       mvn properties:read-project-properties replacer:replace jboss-as:execute-commands -Denvironment=[dev|prod]   :   execute project specific CLI scripts
       mvn jboss-as:deploy -DskipTests -Denvironment=[dev|prod]                                                     :   builds and deploys web artifact
 -->
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.redhat.gpte.ops</groupId>
    <artifactId>parent</artifactId>
    <version>1.0</version>
  </parent>
  <artifactId>gpte-shared-process</artifactId>
  <packaging>war</packaging>
  <name>GPTE Shared Process</name>
  <url>http://www.redhat.com</url>
  <properties>
    <version.jboss.maven.plugin>7.7.Final</version.jboss.maven.plugin>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.redhat.gpte.ops</groupId>
      <artifactId>gpte-domain</artifactId>
    </dependency>
    <dependency>
      <groupId>com.redhat.gpte.ops</groupId>
      <artifactId>gpte-dao</artifactId>
    </dependency>
    <dependency>
      <groupId>com.redhat.gpte.ops</groupId>
      <artifactId>gpte-services</artifactId>
    </dependency>
    <dependency>
      <groupId>com.redhat.gpte.ops</groupId>
      <artifactId>gpte-util</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <!-- REST web services -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
     <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-email</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-velocity</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-mail</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <version>1.5.6</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.servicemix.bundles</groupId>
      <artifactId>org.apache.servicemix.bundles.commons-dbcp</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- Read from project's property file and set as global properties for all maven goals -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
      </plugin>
      <!-- Set system properties used during project JUnit tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <!-- Execute search & replace of variables in CLI batch file (prior to execution of the CLI) -->
      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <version>1.5.3</version>
        <executions>
          <execution>
            <phase>process-package</phase>
            <goals>
              <goal>replace</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <ignoreMissingFile>false</ignoreMissingFile>
          <file>src/main/resources/ipa_commands.cli</file>
          <outputFile>target/ipa_commands.cli</outputFile>
          <regex>false</regex>
          <replacements>

          </replacements>
        </configuration>
      </plugin>

      <!-- Automate execution of CLI batch files (after replacer plugin executes) and deploying of built project web artifact to JBoss EAP -->
      <plugin>
        <groupId>org.jboss.as.plugins</groupId>
        <artifactId>jboss-as-maven-plugin</artifactId>
        <version>${version.jboss.maven.plugin}</version>
        <configuration>
          <execute-commands>
            <scripts>
              <script>target/ipa_commands.cli</script>
            </scripts>
          </execute-commands>
          <port>${cli.port}</port>
        </configuration>
        <executions>
          <execution>
            <id>deploy</id>
            <phase>none</phase>
            <goals>
              <goal>deploy</goal>
            </goals>
          </execution>
          <execution>
            <id>undeploy</id>
            <phase>none</phase>
            <goals>
              <goal>undeploy</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- This camel on EAP project does not include a web.xml -->
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!-- This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.commonjava.maven.plugins</groupId>
                    <artifactId>project-sources-maven-plugin</artifactId>
                    <versionRange>[0.3,)</versionRange>
                    <goals>
                      <goal>archive</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>com.google.code.maven-replacer-plugin</groupId>
                    <artifactId>replacer</artifactId>
                    <versionRange>[1.5.3,)</versionRange>
                    <goals>
                      <goal>replace</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>com.redhat.rcm.maven.plugin</groupId>
                    <artifactId>buildmetadata-maven-plugin</artifactId>
                    <versionRange>[1.7.0,)</versionRange>
                    <goals>
                      <goal>provide-buildmetadata</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
