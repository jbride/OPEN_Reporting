---

- name: Install mysql-connector-java
  yum: name=mysql-connector-java state=present

- name: Create installation target directory
  file: path={{mw_install_dir}} state=directory owner={{user}} group={{user}}

- name: Unzip Wildfly distro (if doesn't already exist)
  stat:
    path: "{{wf_home}}"
  register: st
- unarchive: "src={{wildfly_distro}} dest={{mw_install_dir}} owner={{user}} group={{user}}"
  when: st.stat.isdir is not defined

- name: Create dashbuilder.war directory
  file: "path={{dashbuilder_runtime_artifact}} state=directory owner={{user}} group={{user}}"

- name: Deploy dashbuilder archive to wildfly as an exploded web artifact (if doesn't already exist)
  stat:
    path: "{{dashbuilder_runtime_artifact}}/WEB-INF/web.xml"
  register: st
- unarchive: 
    src: "{{dashbuilder_distro}}"
    dest: "{{dashbuilder_runtime_artifact}}" 
    owner: "{{user}}" 
    group: "{{user}}"
  when: st.stat.isdir is not defined


########        GPTE Reporting Customizations to Dashbuilder            ##################
 
- name: Configure jboss-deployment-structure.xml of dashbuilder to allow for integration with LDAP module
  template:
    src: jboss-deployment-structure.xml
    dest: "{{dashbuilder_runtime_artifact}}/WEB-INF/"
    owner: "{{user}}" 
    group: "{{user}}"
 
- name: Copy standalone.xml to target
  template: 
    src: standalone.xml 
    dest: "{{wf_s_config}}" 
    owner: "{{user}}" 
    group: "{{user}}"
- name: Add system properties to JBoss Wildfly
  blockinfile:
    dest: "{{wf_home}}/bin/standalone.conf"
    block: |
      JAVA_OPTS="$JAVA_OPTS -Ddashbuilder_db_host_ip={{dashbuilder_db_host_ip}}"
      JAVA_OPTS="$JAVA_OPTS -Ddashbuilder_db_name={{dashbuilder_db_name}}"
      JAVA_OPTS="$JAVA_OPTS -Ddashbuilder_db_userId={{dashbuilder_db_userId}}"
      JAVA_OPTS="$JAVA_OPTS -Ddashbuilder_db_passwd={{dashbuilder_db_passwd}}"
      JAVA_OPTS="$JAVA_OPTS -Dlms_reporting_host_ip={{lms_reporting_host_ip}}"
      JAVA_OPTS="$JAVA_OPTS -Dlms_reporting_db_name={{lms_reporting_db_name}}"
      JAVA_OPTS="$JAVA_OPTS -Dlms_reporting_userId={{lms_reporting_userId}}"
      JAVA_OPTS="$JAVA_OPTS -Dlms_reporting_passwd={{lms_reporting_passwd}}"
      JAVA_OPTS="$JAVA_OPTS -Dlabs_demos_reporting_host_ip={{labs_demos_reporting_host_ip}}"
      JAVA_OPTS="$JAVA_OPTS -Dlabs_demos_reporting_host_port={{labs_demos_reporting_host_port}}"
      JAVA_OPTS="$JAVA_OPTS -Dlabs_demos_reporting_db_name={{labs_demos_reporting_db_name}}"
      JAVA_OPTS="$JAVA_OPTS -Dlabs_demos_reporting_db_userId={{labs_demos_reporting_db_userId}}"
      JAVA_OPTS="$JAVA_OPTS -Dlabs_demos_reporting_db_passwd={{labs_demos_reporting_db_passwd}}"

- name: Copy CLI scripts to target
  template: 
    src: "{{wildfly_generic_cli}}" 
    dest: "/tmp" 
    owner: "{{user}}" 
    group: "{{user}}"

- name: Ensure JBoss Wildfly has correct JVM settings and binds to ports that do not conflict with dashbuilder
  replace: 
    dest: "{{wf_home}}/bin/standalone.conf" 
    regexp: '-Xms64m -Xmx512m' 
    replace: "{{wildfly_jvm_props}}"

- name: Start Wildfly (as jboss user) in admin mode so as to be available for execution of CLI scripts
  stat:
    path: "{{wf_home}}/modules/com/mysql"
  register: st
- command: "{{wf_home}}/bin/standalone.sh --admin-only"
  async:   15
  poll:    0
  become: yes
  become_user: "{{user}}"
  when: st.stat.isdir is not defined
- command: "sleep 3"

- name: Now that Wildfly is executing, run CLI scripts
  command: "{{wf_home}}/bin/jboss-cli.sh -c --controller=localhost:10090 --file=/tmp/{{wildfly_generic_cli}}"
  become: yes
  become_user: "{{user}}"
  when: st.stat.isdir is not defined
- command: "{{wf_home}}/bin/jboss-cli.sh -c :shutdown"
  async:   5
  poll:    0

