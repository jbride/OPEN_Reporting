---

########     Use mysql_db ansible plugin to dump databases from dev and push to downstream environments:  qa and/or prod        ##########

- name: Create Backups folder on dev
  file: path={{ mysql_datadump_src_dir }} state=directory
  run_once: true
  delegate_to: "{{dev}}"

- name: Create following directory from which to put fetched database zips; local:{{mysql_datadump_target_dir}}
  command: mkdir -p {{ mysql_datadump_target_dir }}
  delegate_to: localhost









############         refresh stored procedures      #################
 
# Overview:
#   lms_reporting database is dynamically built from a stored procedure that resides in lms_transactional:  refresh_lms_reporting.sql .
#   This stored proc is copied from dev -> prod .
#   Once copied to prod, it is imported into the lms_transactional database in prod .
#   Subsequently, once imported into lms_transactional, it is executed periodically by camel based GTPE Reporting functionality .

- name: Query for stored procedures in lms_transactional of dev environment
  shell: mysqldump -u root -n -d -t --routines {{lms_trans_db_name}} > {{database_update_script_dir}}/mysql_stored_procs_file_name.sql
  delegate_to: "{{dev}}"

- name: Copy {{database_update_script_dir}}/mysql_stored_procs_file_name.sql from dev to local:{{mysql_datadump_target_dir}}
  fetch:
    src: "{{database_update_script_dir}}/mysql_stored_procs_file_name.sql"
    dest: "{{ mysql_datadump_target_dir }}"
    flat: yes
  delegate_to: "{{dev}}"

- name: push mysql_stored_procs_file_name.sql from local to remote {{gpte_env}} environment
  copy:
    src: "{{mysql_datadump_target_dir}}/mysql_stored_procs_file_name.sql"
    dest: "{{ mysql_datadump_target_dir }}"

- name: Execute commands in {{ mysql_datadump_target_dir }}/mysql_stored_procs_file_name.sql
  mysql_db:
    login_user: "root"
    name: "{{lms_trans_db_name}}"
    state: import
    target: "{{ mysql_datadump_target_dir }}/mysql_stored_procs_file_name.sql"





######      Fine grained database updates from dev --> prod         ##############
# 
#  There are use cases where fine grained data changes are made in the GPTE Reporting development environment.
#  One example is changes to: lms_transactional.CourseMappings .
#  These fine grained data changes are maintained in SQL scripts in the GPTE dev environment. 

- name: Query for various tables in lms_transactional of dev environment
  shell: mysqldump -u root {{lms_trans_db_name}} Courses CourseMappings > {{database_update_script_dir}}/mysql_courses_dump_file_name.sql
  delegate_to: "{{dev}}"

- name: Copy {{database_update_script_dir}}/mysql_courses_dump_file_name.sql from dev to local:{{mysql_datadump_target_dir}}
  fetch:
    src: "{{database_update_script_dir}}/mysql_courses_dump_file_name.sql"
    dest: "{{ mysql_datadump_target_dir }}"
    flat: yes
  delegate_to: "{{dev}}"

- name: push mysql_courses_dump_file_name.sql from local to remote {{gpte_env}} environment
  copy:
    src: "{{mysql_datadump_target_dir}}/mysql_courses_dump_file_name.sql"
    dest: "{{ mysql_datadump_target_dir }}"

- name: Execute commands in {{ mysql_datadump_target_dir }}/mysql_courses_dump_file_name.sql
  mysql_db:
    login_user: "root"
    name: "{{lms_trans_db_name}}"
    state: import
    target: "{{ mysql_datadump_target_dir }}/mysql_courses_dump_file_name.sql"









########         refresh dashbuilder database   ###############
- name: Dump remote dev dashbuilder database
  mysql_db: 
    login_user: root
    name: "{{ item }}"
    state: dump 
    target: "{{ mysql_datadump_src_dir }}/{{ item }}Db.sql.gz"
  with_items: "{{databases_to_update_from_dev}}"
  delegate_to: "{{dev}}"

- name: Copy database dump files from dev to local:{{mysql_datadump_target_dir}}
  fetch:
    src: "{{ mysql_datadump_src_dir }}/{{ item }}Db.sql.gz"
    dest: "{{ mysql_datadump_target_dir }}"
    flat: yes
  with_items: "{{databases_to_update_from_dev}}"
  delegate_to: "{{dev}}"

- name: Create Backups folder on remote {{gpte_env}} environment
  file: path={{ mysql_datadump_target_dir }} state=directory

- name: push database dump files from local to remote {{gpte_env}} environment
  copy:
    src: "{{ mysql_datadump_target_dir }}/{{ item }}Db.sql.gz"
    dest: "{{ mysql_datadump_target_dir }}"
  with_items: "{{databases_to_update_from_dev}}"

- name: import data into {{gpte_env}} RDBMS
  mysql_db:
    name: "{{ item }}"
    state: import 
    target: "{{ mysql_datadump_target_dir }}/{{ item }}Db.sql.gz"
  with_items: "{{databases_to_update_from_dev}}"
