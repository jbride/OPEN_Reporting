<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
         "> 

  <!-- Defines transactionalDS bean along with any other environment specific needs -->
  <import resource="classpath:spring/environment-specific-camel-context.xml" />

  <!-- Spring configuration based on annotations: required for Spring Autowiring -->
  <context:annotation-config />

  <bean id="sbJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="transactionalDS" />
  </bean>

  <bean id="canonicalDAO" class="com.redhat.gpe.dao.DomainDAOImpl" />

  <bean id="cCompletionServiceBean"         class="com.redhat.gpe.coursecompletion.service.CourseCompletionServiceBean" />
  <bean id="emailServiceBean"               class="com.redhat.gpte.services.EmailServiceBean" />


  <camelContext trace="false" id="course-completion" xmlns="http://camel.apache.org/schema/spring">
      
    <dataFormats>
        <bindy type="Csv" classType="com.redhat.gpe.coursecompletion.dokeos.DokeosCourseCompletion" id="bindyDokeos" />
        <bindy type="Csv" classType="com.redhat.gpe.coursecompletion.sumtotal.SumtotalCourseCompletion" id="bindySumtotal"/>
    </dataFormats>

    <onException>
        <exception>java.lang.Exception</exception>

        <!-- Exception propogated to JUnit tests when set to false -->
        <!-- Need to set to true, however, when running in JBoss.  Otherwise, infinite loop of emails will go out -->
        <!-- Setting of sys property substition doesn't appear to take affect -->
        <!-- handled><constant>{{sb_onexception_handled}}</constant></handled -->
        <handled><constant>true</constant></handled>

        <log message="Exception encountered: ${exception.message} : return-path = ${header.Return-Path} " loggingLevel="ERROR"/>
        <log message="${exception.stacktrace}" loggingLevel="ERROR"/>
        <to uri="seda:send-email"/>
    </onException>

    <route id="receive-sumtotal-course-completions">
        <description>
            1)  Executes validation logic on inbound Sumtotal Course Completion data file
            2)  Kicks back data files that do not pass validation logic and sends notification email of problem
            3)  Persists valid course completions
        </description>
        <from uri="{{cc_receive_sumtotal_input_uri}}" />
        <log message="Received Sumttotal email. from: ${header.Return-Path}, subject ${header.subject}, ${header.CamelFileName}" id="log_sumtotal_receive"/>
        <setHeader headerName="ROUTE_SPECIFIC_EMAILS"><constant>smangan@redhat.com,jdoser@redhat.com,nihall@redhat.com,lana@redhat.com</constant></setHeader>
            <unmarshal ref="bindySumtotal"/>
            <doTry>
                <!--potentially throws this exception:
                    Failed to invoke method: size on null due to: org.apache.camel.component.bean.MethodNotFoundException: Method with name: size not found on bean: SumtotalCourseCompletion -->
                <log message="# sumtotal student courses found in ${header.CamelFileName} : ${body.size}"/>
                <doCatch>
                    <exception>org.apache.camel.language.bean.RuntimeBeanExpressionException</exception>
                    <log message="only 1 sumtotal student course found in ${header.CamelFileName}"/>
                </doCatch>
            </doTry>
            <to uri="bean:cCompletionServiceBean?method=validateSumtotalCourseCompletions" />
            <split id="for-each-sumtotal-student-course">
                <simple>${body}</simple>
                <doTry>
                    <to uri="bean:cCompletionServiceBean?method=convertSumtotalCourseCompletionToStudentCourse" id="sumtotal-convert"/>
                    <doCatch>
                        <exception>org.springframework.dao.EmptyResultDataAccessException</exception>
                        <log message="${body.email} : Not found in Students table.  Will now add" loggingLevel="WARN" />
                        <to uri="bean:cCompletionServiceBean?method=insertNewStudentGivenSumtotalCourseCompletion" id="update-sumtotal-student"/>
                        <to uri="bean:cCompletionServiceBean?method=convertSumtotalCourseCompletionToStudentCourse" id="sumtotal-re-attempt-to-convert"/>
                    </doCatch>
                </doTry>
                <to uri="direct:add-student-course-to-db" id="cc_add-sumtotal-student-course-to-db" />
            </split>
        <to uri="bean:cCompletionServiceBean?method=setSumtotalProcessingExceptionsToBody" />
        <to uri="seda:send-email"/>
    </route>

    <route id="receive-dokeos-course-completions">
        <description>
            - Accepts list of dokeos course completion spreadsheets
            - Executes validation logic on inbound Dokeos data file
            - Kicks back data files that do not pass validation logic and sends notification email of problem
            - Iterates through course completions in each spreadsheet
            - Persists course completions (StudentCourse objects)
            - Because course completions are now originating from rh.dokeos.com in an automated manner, no longer will send receipt of confirmation.
        </description>
        <from uri="{{cc_receive_dokeos_input_uri}}" />
        <log message="Received Dokeos email. from: ${header.Return-Path}, subject ${header.subject}, ${header.CamelFileName}" id="log_dokeos_receive"/>
                <unmarshal ref="bindyDokeos"/>
                <doTry>
                    <!--potentially throws this exception:
                        Failed to invoke method: size on null due to: org.apache.camel.component.bean.MethodNotFoundException: Method with name: size not found on bean: DokeosCourseCompletion -->
                    <log message="# dokeos student courses found in ${header.CamelFileName} : ${body.size()}"/>
                    <doCatch>
                        <exception>org.apache.camel.language.bean.RuntimeBeanExpressionException</exception>
                        <log message="only 1 dokeos student course found in ${header.CamelFileName}"/>
                        <to uri="bean:cCompletionServiceBean?method=clearException" id="clear-exception"/>
                    </doCatch>
                </doTry>
                <split id="for-each-dokeos-course-completion">
                    <simple>${body}</simple>
                    <choice id="if-assignment-passing-score">
                        <when>
                            <simple>${body.quizName} contains 'Assignment' &amp;&amp; ${body.scoreInt} &lt; 100</simple>
                            <log message="${body.email} : Will not persist dokeos student assignment due to non-passing score: ${body.score}" id="log_dokeos_assignment_not_100"/>
                        </when>
                        <otherwise>
                            <when>
                                <simple>${body.quizName} contains 'Assignment'</simple>
                                <setHeader headerName="ROUTE_SPECIFIC_EMAILS"><constant>kiboone@redhat.com,sduttama@redhat.com,tshaikh@redhat.com</constant></setHeader>
                                <to uri="bean:emailServiceBean?method=setHeaderToWithProperEmails"/>
                                <to uri="bean:emailServiceBean?method=clearAttachments"/>
                                <setHeader headerName="Subject">
                                    <simple>GPTE Advanced ILT Completion: {{jboss.host.name}}: ${body.email}</simple>
                                </setHeader>
                                <to uri="seda:send-generic-email"/>
                            </when>
                            <doTry>
                                <to uri="bean:cCompletionServiceBean?method=convertDokeosCourseCompletionToStudentCourse" id="dokeos-convert"/>
                                <doCatch>
                                    <exception>org.springframework.dao.EmptyResultDataAccessException</exception>
                                    <log message="${body.email} : ${body.quizName} : ${body.assessmentDate} : Not found in Students table.  Will now add" loggingLevel="WARN" />
                                    <to uri="bean:cCompletionServiceBean?method=insertNewStudentGivenDokeosCourseCompletion" id="update-dokeos-student"/>
                                    <to uri="bean:cCompletionServiceBean?method=convertDokeosCourseCompletionToStudentCourse" id="dokeos-re-attempt-to-convert"/>
                                </doCatch>
                            </doTry>
                            <to uri="direct:add-student-course-to-db" id="cc_add-dokeos-student-course-to-db" />
                        </otherwise>
                    </choice>
                </split>
    </route>

    <route id="receive-partner-course-completions">
        <from uri="{{cc_receive_partner_input_uri}}" />
        <log message="Received partner email. from: ${header.Return-Path}, subject ${header.subject}" id="log_partner_receive"/>
    </route>

    <route id="add-student-course-to-db">
        <description> 
            Expects the following payload:  CourseCompletion
            Responsible for insertion of new StudentCourse record into database
        </description>
        <from uri="direct:add-student-course-to-db"/>
        <choice id="if-passing-score">
            <when>
                <simple>${body.assessmentScore} >= 70</simple>
                <when>
                    <simple>{{cc_persist_student_course}} == true</simple>
                    <log message="${body.student.email} : Adding student course to db: '${body.course.coursename}' '${body.assessmentScore}'"/>
                    <to uri="bean:cCompletionServiceBean?method=addStudentCourseToDB" id="add-course-completion-to-db"/>
                </when>
            </when>
            <otherwise>
                <log message="${body.student.email} : Will not persist student course due to non-passing score: ${body.courseName}" id="log_student_course_not_passed"/>
            </otherwise>
        </choice>
    </route>

    <!--    *************************************************************************************************   -->
    <!--    *************                       Pathgather                                      *************   -->
    <route id="update-pathgather-with-accreditation" >
        <description>
            1) Expects the following payload:  CourseCompletion
            2) Responsible for ?????
        </description>
        <from uri="direct:update-pathgather-with-accreditation" />
        <log message="******** Invoking pathgatherer     done" loggingLevel="INFO"/>
    </route>

    <!--    *************************************************************************************************   -->

    <route id="send-email">
        <from uri="seda:send-email"/>
        <to uri="bean:emailServiceBean?method=setHeaderToWithProperEmails"/>
        <to uri="bean:emailServiceBean?method=clearAttachments"/>
        <choice id="if-exception-exists">
            <when>
                <simple>${exception.message} != null</simple>
                <setHeader headerName="Subject">
                    <simple>GPTE Course Completion Service {{jboss.host.name}}: Problem processing ${header.CamelFileName}</simple>
                </setHeader>

                <!-- Appears that exception.message is not passed to velocity template -->
                <setBody><simple>${exception.message}</simple></setBody>

                <to uri="velocity:emailTemplates/problem-reply-email.vm"/>
            </when>
            <otherwise>
                <setHeader headerName="Subject">
                    <simple>GPTE Course Completion Service {{jboss.host.name}}: Success processing ${header.CamelFileName}</simple>
                </setHeader>
                <to uri="velocity:emailTemplates/auto-reply-email.vm"/>
            </otherwise>
        </choice>
        <to uri="vm:send-email-global"/>
    </route>

    <route>
        <from uri="seda:send-generic-email"/>
        <to uri="velocity:emailTemplates/auto-reply-email.vm"/>
        <to uri="vm:send-email-global"/>
    </route>

  </camelContext>
</beans>
